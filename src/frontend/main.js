var crossValues = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78];
var crosses = [0, 0, 0, 0, 0];
var skippedTurns = 0;
var scoreTotals = [0, 0, 0, 0, 0, 0];

// Auto-generated by firebase init
document.addEventListener('DOMContentLoaded', function () {
	//const loadEl = document.querySelector('#load');

	// firebase.auth().onAuthStateChanged(user => { });
	// firebase.database().ref('/path/to/ref').on('value', snapshot => { });
	// firebase.firestore().doc('/foo/bar').get().then(() => { });
	// firebase.functions().httpsCallable('yourFunction')().then(() => { });
	// firebase.messaging().requestPermission().then(() => { });
	// firebase.storage().ref('/path/to/ref').getDownloadURL().then(() => { });
	// firebase.analytics(); // call to activate
	// firebase.analytics().logEvent('tutorial_completed');
	// firebase.performance(); // call to activate

	try {
		let app = firebase.app();
		let features = [
			'auth',
			'database',
			'firestore',
			'functions',
			'messaging',
			'storage',
			'analytics',
			'remoteConfig',
			'performance',
		].filter(feature => typeof app[feature] === 'function');
		//loadEl.textContent = `Firebase SDK loaded with ${features.join(', ')}`;
	} catch (e) {
		console.error(e);
		//loadEl.textContent = 'Error loading the Firebase SDK, check the console.';
	}
});

window.onload = function () {
	var buttonGroups = document.getElementsByClassName('colorGroup');
	var skipBoxes = document.getElementsByClassName('skip');

	for (i = 0; i < skipBoxes.length; i++) {
		skipBoxes[i].checked = false;
		skipBoxes[i].addEventListener('click', skipTurn);
	}

	for (i = 0; i < buttonGroups.length; i++) {
		var buttons = buttonGroups[i].getElementsByTagName('button');
		for (j = 0; j < buttons.length; j++) {
			buttons[j].addEventListener('click', toggleCross);
		}
	}

	updateScoreBoxes();
}

function mapColorIdToIndex(colorId) {
	if (colorId == "red")
		return 0;
	else if (colorId == "yellow")
		return 1;
	else if (colorId == "green")
		return 2;
	else if (colorId == "blue")
		return 3;
	else
		return -1;
}

function toggleCross() {
	var currentClasses = this.className;
	var colorIdIndex = mapColorIdToIndex(this.parentElement.id);
	if (currentClasses.search("selected") >= 0) {
		crosses[colorIdIndex] -= 1;
		this.className = currentClasses.replace("selected", "").trim();
	} else {
		this.className += "selected";
		crosses[colorIdIndex] += 1;
	}

	updateScore(colorIdIndex);
}

function skipTurn() {
	var skipBoxes = document.getElementsByClassName('skip');
	var total = 0;
	for (i = 0; i < skipBoxes.length; i++) {
		if (skipBoxes[i].checked)
			total += 1;
	}
	skippedTurns = total;
	updateScore(4);

}

function updateScore(colorIdIndex) {
	if (colorIdIndex < 0 || colorIdIndex > 5) {
		console.log("Invalid colorIdIndex: " + colorIdIndex);
		return;
	}

	if (colorIdIndex <= 3)
		scoreTotals[colorIdIndex] = crossValues[crosses[colorIdIndex]];
	else
		scoreTotals[colorIdIndex] = -5 * skippedTurns;

	var totalScore = 0;
	for (i = 0; i < scoreTotals.length - 1; i++)
		totalScore += scoreTotals[i];
	scoreTotals[scoreTotals.length - 1] = totalScore;
	updateScoreBoxes();

}

function updateScoreBoxes() {
	scoreBoxes = document.getElementsByClassName('tbScore');
	if (scoreBoxes.length != scoreTotals.length) {
		console.log('scoreBoxes..', scoreBoxes);
		console.log('scoreTotals..', scoreTotals);
		console.log("Unmatched score boxes and score totals array lengths");
	}

	for (i = 0; i < scoreBoxes.length && i < scoreTotals.length; i++) {
		scoreBoxes[i].value = scoreTotals[i];
	}
}